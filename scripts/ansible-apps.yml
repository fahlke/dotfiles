---

# usage: ansible-playbook <(curl -fsSL http://sre.fahlke.io/ansible/apps)

- name: "Homebrew | Install MacOS packages with Homebrew"
  hosts: localhost
  become: false
  vars:
    upgrade_homebrew_packages: true
    brew_packages:
      - name: 'zsh'
        opts: ['without-etcdir']
      - 'zsh-syntax-highlighting'
      - 'zsh-completions'
      - 'ansible'
      - name: 'go'
        description: 'The Go Programming Language'
        url: 'https://golang.org/doc/'
      - 'arp-scan'
      - name: 'dep'
        description: 'Go dependency management tool'
        url: 'https://github.com/golang/dep#installation'
      - name: 'docker'
        ensure: 'present'
      - 'docker-completion'
      - 'docker-machine-driver-hyperkit'
      - 'nmap'
      - 'htop'
      - 'jq'
      - 'pstree'
      - 'kubernetes-cli'
      - 'helm'
      - name: 'jsonnet'
        description: 'Jsonnet - The data templating language'
        url: 'https://jsonnet.org'
      - 'pyenv'
      - 'terraform'
      - 'terraform-inventory'
      - 'terraform-provisioner-ansible'
      - name: 'packer'
        description: 'Build Automated Machine Images'
        url: 'https://www.packer.io/intro/index.html#what-is-packer-'
      - 'git'
      - 'git-flow'
      - 'git-lfs'
      - 'wget'
      - name: 'xz'
        description: 'XZ Utils is free general-purpose data compression software with a high compression ratio'
        url: 'https://tukaani.org/xz/'
      - 'screen'
      - name: 'curl'
        ensure: 'absent'
      - 'graphviz'
      - 'cfssl'
      - 'sqlite'
      - 'coreutils'
      - 'htop'
      - 'hugo'
      - 'optipng'
      - 'hyperkit'
      - 'p7zip'
      - 'imagemagick'
      - 'ipcalc'
      - 'yq'
      - 'minikube'
      - 'argoproj/tap/argo'
      - 'golangci/tap/golangci-lint'
      - 'readline'
      - 'protobuf'
      - 'mosquitto'

    brew_cask_packages:
      - 'hyperswitch'
      - 'nordvpn'
      - 'iterm2'
      - 'homebrew/cask-fonts/font-sourcecodepro-nerd-font'
      - 'visual-studio-code'
      - 'virtualbox'
      - 'virtualbox-extension-pack'
      - 'vagrant'
      - 'slack'
      - 'spotify'
      - 'little-snitch'
      - 'istat-menus'
      - 'airserver'
      - name: 'goland'
        description: 'A Clever IDE to Go by JetBrains'
        url: 'https://www.jetbrains.com/go/'
      - 'google-cloud-sdk'
      - name: 'insomnia'
        description: 'Debug APIs like a human, not a robot'
        url: 'https://insomnia.rest'

  pre_tasks:
    - name: "Homebrew | Ensure Homebrew is installed"
      stat:
        path: "/usr/local/bin/brew"
      register: "homebrew_binary"

    - name: "Homebrew | Fail if Homebrew is not installed"
      fail:
        msg: "Homebrew is missing... Install it from http://brew.sh/."
      when: >
            not homebrew_binary.stat.exists

  tasks:
    - name: "Homebrew | Update Homebrew"
      homebrew:
        update_homebrew: true
      when: homebrew_binary.stat.exists

    - name: "Homebrew | Install packages from casks"
      homebrew_cask:
        name: "{{ item.name | default(item) }}"
        state: "{{ (item.ensure | default('upgraded')) | join('') }}"
      loop: '{{ brew_cask_packages }}'
      when: homebrew_binary.stat.exists

    - name: "Homebrew | Install packages from formulae"
      homebrew:
        name: "{{ item.name | default(item) }}"
        state: "{{ (item.ensure | default('upgraded')) | join('') }}"
        upgrade_all: "{{ upgrade_homebrew_packages }}"
        install_options: "{{ (item.opts | default(omit)) | list }}"
      register: echo_out
      loop: '{{ brew_packages }}'
      when: homebrew_binary.stat.exists
