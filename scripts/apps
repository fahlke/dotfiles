#!/bin/bash
set -euo pipefail

# usage: /bin/bash <(curl -fsSL http://sre.fahlke.io/apps)

# temporary setup path for Homebrew
export PATH="/usr/local/bin:$PATH"

# define output colors
readonly COLOR_RED='\033[0;31m'
readonly COLOR_ORANGE='\033[0;33m'
readonly COLOR_GREEN='\033[0;32m'
readonly COLOR_RESET='\033[0m'

declare FORCE_INSTALL_HOMEBREW=false

while getopts ":fh" opt; do
  case $opt in
    f)  FORCE_INSTALL_HOMEBREW=true;;
    h)  echo "use -f to install homebrew"; exit 0;;
    \?) echo "Invalid option -$OPTARG, run with -h for help" >&2; exit 1;;
  esac
done

function __info_msg() {
  echo -e "${COLOR_GREEN}I:${COLOR_RESET} $1"
}

function __warning_msg() {
  echo -e "${COLOR_ORANGE}W:${COLOR_RESET} $1"
}

function __error_msg() {
  echo -e "${COLOR_RED}E:${COLOR_RESET} $1"
}

function __install_homebrew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
}

# packages to install with Homebrew (the ! ignores exit code 1 from read)
declare BREW_BUNDLE=""
! read -r -d '' BREW_BUNDLE <<EOF
# additional taps
tap "homebrew/bundle"
tap "homebrew/cask"
tap "homebrew/core"
tap "homebrew/cask-fonts"
tap "romkatv/powerlevel10k"
tap "golangci/tap"
tap "mas-cli/tap"
tap "hashicorp/tap"

# programming languages and utilities
brew "go"
cask "goland"
cask "visual-studio-code"
cask "insomnia"
cask "google-cloud-sdk"
brew "awscli"
brew "golangci-lint"
brew "terraform-ls"
brew "aws-iam-authenticator"

# kubernetes
brew "kind"
brew "helm"
brew "kubectx"
brew "skaffold"
brew "kustomize"
brew "kubernetes-cli", link: true
brew "stern"
brew "k9s"
brew "kubebuilder"
cask "lens"
brew "istioctl"

# system essentials
cask "docker"
brew "docker-completion"
cask "1password"
cask "istat-menus"
cask "iterm2", auto_updates: false
cask "slack"
cask "spotify"
cask "airserver"
cask "monitorcontrol"

# system utilities
brew "mas"
brew "htop", url: 'https://github.com/Homebrew/homebrew-core/blob/master/Formula/zsh-completions.rb'
brew "zsh-completions", url: 'https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh'
brew "zsh-syntax-highlighting", url: 'https://formulae.brew.sh/formula/zsh-syntax-highlighting'
brew "powerlevel10k", url: 'https://github.com/romkatv/powerlevel10k#homebrew'
brew "ansible"
brew "arp-scan"
brew "nmap"
brew "jq"
brew "pstree"
brew "jsonnet", url: 'https://jsonnet.org'
brew "pyenv"
brew "terraform"
brew "terraform-inventory"
brew "git"
brew "git-flow"
brew "git-lfs"
brew "wget"
brew "xz", url: 'https://tukaani.org/xz/'
brew "screen"
brew "graphviz"
brew "cfssl"
brew "sqlite"
brew "coreutils"
brew "htop"
brew "optipng"
brew "p7zip"
brew "imagemagick"
brew "ipcalc"
brew "yq"
brew "readline"

# fonts
cask "font-sauce-code-pro-nerd-font"

# audio tools
cask "native-access"
cask "spotify"

# video tools
mas "DaVinci Resolve", id: 571213070

## photo tools
#mas "Luminar 4", id: 1484647920

# office tools
mas "Pages",   id: 409201541
mas "Numbers", id: 409203825
mas "Keynote", id: 409183694
mas "Slack",   id: 803453959
cask "discord"
EOF

# install Homebrew
if [[ ${FORCE_INSTALL_HOMEBREW} == true ]]; then
  __info_msg "Installing Homebrew (might need sudo)..."
  __install_homebrew
else
  if [[ $(command -v brew >/dev/null; echo $?) -ne 0 ]]; then
    __info_msg "Installing Homebrew (might need sudo)..."
    __install_homebrew
  else
    __info_msg "Homebrew already installed, skipping installation..."
  fi
fi

__info_msg "Disabling Homebrew analytics..."
brew analytics off

__info_msg "Cleaning up Homebrew..."
brew cleanup

#__info_msg "Verifying Homebrew installation..."
#brew doctor || (__error_msg "Homebrew setup incomplete! Exiting!"; exit 1)

__info_msg "Updating Homebrew..."
brew update || (__error_msg "Homebrew update failed! Exiting!"; exit 1)

__info_msg "Installing formulae and casks with Homebrew..."
brew bundle --no-lock --file=- <<<"${BREW_BUNDLE}"
brew unlink kubernetes-cli && brew link --overwrite kubernetes-cli

__info_msg "Upgrading installed formulae and casks..."
brew upgrade

__info_msg "Cleaning up Homebrew..."
brew cleanup

__info_msg "Ready to use Homebrew!"
